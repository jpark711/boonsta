{"version":3,"sources":["CustomersService.js","CustomersList.js","CustomerCreateUpdate.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","CustomersService","url","concat","axios","get","then","response","data","link","pk","customer","delete","post","put","customersService","CustomersList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","customers","nextPageURL","nextPage","bind","assertThisInitialized","handleDelete","self","getCustomers","result","console","log","setState","nextlink","e","deleteCustomer","newArr","filter","obj","getCustomersByURL","_this2","react_default","a","createElement","className","key","map","c","description","first_name","onClick","href","Component","CustomerCreateUpdate","handleSubmit","params","match","getCustomer","refs","firstName","value","createCustomer","alert","catch","updateCustomer","event","handleUpdate","handleCreate","preventDefault","onSubmit","ref","type","BaseLayout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","react_router","path","exact","component","App","react_router_dom","App_BaseLayout","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9eda3ecc.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_URL = 'http://boonsta.com/api';\n\nexport default class CustomersService{\n\n    getCustomers() {\n        const url = `${API_URL}/customers/`;\n        return axios.get(url).then(response => response.data);\n    }  \n    getCustomersByURL(link){\n        const url = `${API_URL}${link}`;\n        return axios.get(url).then(response => response.data);\n    }\n    getCustomer(pk) {\n        const url = `${API_URL}/customers/${pk}`;\n        return axios.get(url).then(response => response.data);\n    }\n    deleteCustomer(customer){\n        const url = `${API_URL}/customers/${customer.pk}`;\n        return axios.delete(url);\n    }\n    createCustomer(customer){\n        const url = `${API_URL}/customers/`;\n        return axios.post(url,customer);\n    }\n    updateCustomer(customer){\n        const url = `${API_URL}/customers/${customer.pk}`;\n        return axios.put(url,customer);\n    }\n}\n","import  React, { Component } from  'react';\nimport  CustomersService  from  './CustomersService';\n\nconst  customersService  =  new  CustomersService();\n\nclass  CustomersList  extends  Component {\n\nconstructor(props) {\n    super(props);\n    this.state  = {\n        customers: [],\n        nextPageURL:  ''\n    };\n    this.nextPage  =  this.nextPage.bind(this);\n    this.handleDelete  =  this.handleDelete.bind(this);\n}\n\ncomponentDidMount() {\n    var  self  =  this;\n    customersService.getCustomers().then(function (result) {\n        console.log(result);\n        self.setState({ customers:  result.data, nextPageURL:  result.nextlink})\n    });\n}\nhandleDelete(e,pk){\n    var  self  =  this;\n    customersService.deleteCustomer({pk :  pk}).then(()=>{\n        var  newArr  =  self.state.customers.filter(function(obj) {\n            return  obj.pk  !==  pk;\n        });\n\n        self.setState({customers:  newArr})\n    });\n}\n\nnextPage(){\n    var  self  =  this;\n    console.log(this.state.nextPageURL);        \n    customersService.getCustomersByURL(this.state.nextPageURL).then((result) => {\n        self.setState({ customers:  result.data, nextPageURL:  result.nextlink})\n    });\n}\nrender() {\n\n    return (\n        <div  className=\"customers--list\">\n            <table  className=\"table\">\n            <thead  key=\"thead\">\n            <tr>\n                <th>#</th>\n                <th>Memo</th>\n                <th>Name</th>\n                <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {this.state.customers.map( c  =>\n                <tr  key={c.pk}>\n                <td>{c.pk}  </td>\n                <td>{c.description}</td>\n                <td>{c.first_name}</td>\n                <td>\n                <button  onClick={(e)=>  this.handleDelete(e,c.pk) }> Delete</button>\n                <a  href={\"/customer/\" + c.pk}> Update</a>\n                </td>\n            </tr>)}\n            </tbody>\n            </table>\n            <button  className=\"btn btn-primary\"  onClick=  {  this.nextPage  }>Next</button>\n        </div>\n        );\n  }\n}\nexport  default  CustomersList;\n","import  React, { Component } from  'react';\n\nimport  CustomersService  from  './CustomersService';\n\nconst  customersService  =  new  CustomersService();\n\nclass  CustomerCreateUpdate  extends  Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\ncomponentDidMount(){\n    const { match: { params } } =  this.props;\n    if(params  &&  params.pk)\n    {\n        customersService.getCustomer(params.pk).then((c)=>{\n            this.refs.firstName.value  =  c.first_name;\n            this.refs.description.value  =  c.description;\n        })\n    }\n}\n\nhandleCreate(){\n    customersService.createCustomer(\n        {\n        \"first_name\":  this.refs.firstName.value,\n        \"description\":  this.refs.description.value\n        }).then((result)=>{\n                alert(\"Customer created!\");\n        }).catch(()=>{\n                alert('There was an error! Please re-check your form.');\n        });\n}\n\nhandleUpdate(pk){\ncustomersService.updateCustomer(\n    {\n    \"pk\":  pk,\n    \"first_name\":  this.refs.firstName.value,\n    \"description\":  this.refs.description.value\n    }\n    ).then((result)=>{\n        alert(\"Customer updated!\");\n    }).catch(()=>{\n        alert('There was an error! Please re-check your form.');\n    });\n}\n\nhandleSubmit(event) {\n    const { match: { params } } =  this.props;\n    if(params  &&  params.pk){\n        this.handleUpdate(params.pk);\n    }\n    else\n    {\n        this.handleCreate();\n    }\n    event.preventDefault();\n}\n\nrender() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Memo:</label>\n              <textarea className=\"form-control\" ref='description' ></textarea>\n\n            <label>\n              Name:</label>\n              <input className=\"form-control\" type=\"text\" ref='firstName' />\n\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n            </div>\n          </form>\n        );\n  }\n\n}\nexport default CustomerCreateUpdate;\n","import  React, { Component } from  'react';\nimport { BrowserRouter } from  'react-router-dom'\nimport { Route } from  'react-router-dom'\nimport  CustomersList  from  './CustomersList'\nimport  CustomerCreateUpdate  from  './CustomerCreateUpdate'\nimport  './App.css';\n\nconst  BaseLayout  = () => (\n<div  className=\"container-fluid\">\n    <nav  className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <a  className=\"navbar-brand\"  href=\"/\">Boonsta Beta v1.0</a>\n        <button  className=\"navbar-toggler\"  type=\"button\"  data-toggle=\"collapse\"  data-target=\"#navbarNavAltMarkup\"  aria-controls=\"navbarNavAltMarkup\"  aria-expanded=\"false\"  aria-label=\"Toggle navigation\">\n        <span  className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div  className=\"collapse navbar-collapse\"  id=\"navbarNavAltMarkup\">\n        <div  className=\"navbar-nav\">\n            <a  className=\"nav-item nav-link\"  href=\"/\">MEMOS</a>\n            <a  className=\"nav-item nav-link\"  href=\"/customer\">WRITE A NEW MEMO</a>\n        </div>\n    </div>\n    </nav>\n    <div  className=\"content\">\n        <Route  path=\"/\"  exact  component={CustomersList}  />\n        <Route  path=\"/customer/:pk\"  component={CustomerCreateUpdate}  />\n        <Route  path=\"/customer/\"  exact  component={CustomerCreateUpdate}  />\n    </div>\n</div>\n)\n\nclass  App  extends  Component {\n\nrender() {\n    return (\n    <BrowserRouter>\n        <BaseLayout/>\n    </BrowserRouter>\n    );\n}\n}\nexport  default  App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}